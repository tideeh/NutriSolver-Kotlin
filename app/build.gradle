apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

// aqui configura o version code e o version name
ext.versionMajor = 1 // altera quando tem um grande releas
ext.versionMinor = 0 // altera quando tem um release medio (volta pra 0 quando altera o Major)
ext.versionPatch = 5 // altera em qualquer release (volta pra 0 quando altera o Minor)
ext.versionClassifier = "ALFA" // nome da versao (null) para desativar
//ext.isBeta = true
ext.minimumSdkVersion = 21 // altera quando precisar aumentar o min SDK version (novas apis)

android {
    signingConfigs {
        release {
            //storeFile file('C:\\Users\\tideeh\\Google Drive\\NutriSolver\\app\\app key\\nutrisolver.jks')//PC
            storeFile file('C:\\Users\\tidee\\Google Drive\\NutriSolver\\app\\app key\\nutrisolver.jks')//notebook
            storePassword 'AAbb1122'
            keyAlias = 'nutrisolver'
            keyPassword 'AAbb1122'
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "br.com.nutrisolver"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 29
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    //if (ext.versionClassifier == null && ext.isBeta) {
    //    ext.versionClassifier = "BETA"
    //}

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-firestore:21.3.0'
    implementation 'com.facebook.android:facebook-android-sdk:5.11.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.0-SNAPSHOT@aar') {
        transitive = true;
    }
}

apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin